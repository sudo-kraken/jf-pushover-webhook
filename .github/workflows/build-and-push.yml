name: Build and Push Multi-Architecture Image

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/renovate.json'
      - '.github/workflows/renovate.yml'
      - 'README.md'
      - '*.md'
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ghcr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Warm cache (amd64)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Commit timestamp
        id: ts
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Warm cache (no push) — linux/amd64
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: false
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            BUILD_DATE=${{ steps.ts.outputs.now }}
          cache-from: type=gha,scope=linux/amd64
          cache-to: type=gha,mode=max,scope=linux/amd64
          provenance: false

  publish:
    name: Build & push multi-arch image (GHCR)
    needs: build
    if: github.event_name != 'pull_request'  # don’t push from PRs
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Commit timestamp
        id: ts
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU (enable ARM emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=develop
            type=sha
          labels: |
            org.opencontainers.image.created=${{ steps.ts.outputs.TIMESTAMP }}          

      - name: Build & push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            BUILD_DATE=${{ steps.ts.outputs.TIMESTAMP }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: |
            type=gha,scope=linux/amd64
            type=gha,scope=linux/arm64
          cache-to: type=gha,mode=max
          provenance: false

  discord:
    name: Send Discord Notification
    needs: publish
    if: always()
    runs-on: ubuntu-24.04
    steps:
      - name: Get Build Job Status
        uses: technote-space/workflow-conclusion-action@45ce8e0eb155657ab8ccf346ade734257fd196a5 # v3.0.3

      - name: Combine Job Status
        id: status
        run: |
          failures=(neutral, skipped, timed_out, action_required)
          if [[ ${array[@]} =~ $WORKFLOW_CONCLUSION ]]; then
            echo "status=failure" >> $GITHUB_OUTPUT
          else
            echo "status=$WORKFLOW_CONCLUSION" >> $GITHUB_OUTPUT
          fi

      - name: Post Status to Discord
        uses: sarisia/actions-status-discord@58667542682a27f270460405363e3a982f57a7ee # v1.0.0
        with:
          webhook: "https://discord.com/api/webhooks/1425399520279134249/_tpbIAr_l4c1TVyTTIfCxTt_4RHeYJP8BNEf6Fj9mrG-XREPrThEzPn1-9g4DWiCqtUK"
          status: ${{ steps.status.outputs.status }}
          title: ${{ github.workflow }}
          nofail: true          
