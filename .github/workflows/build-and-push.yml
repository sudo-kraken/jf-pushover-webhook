name: Build and Push Multi-Architecture Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ghcr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Warm cache (amd64)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deterministic timestamp
        id: ts
        run: echo "now=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Warm cache (no push) â€” linux/amd64
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: false
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            BUILD_DATE=${{ steps.ts.outputs.now }}
          cache-from: type=gha,scope=linux/amd64
          cache-to: type=gha,mode=max,scope=linux/amd64
          provenance: false

  publish:
    name: Build & push multi-arch image (GHCR)
    needs: build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deterministic timestamp
        id: ts
        run: echo "now=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU (enable ARM emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            BUILD_DATE=${{ steps.ts.outputs.now }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.ts.outputs.now }}
          tags: |
            ghcr.io/${{ github.actor }}/pushover-webhook:latest
            ghcr.io/${{ github.actor }}/pushover-webhook:${{ github.sha }}
          cache-from: |
            type=gha,scope=linux/amd64
            type=gha,scope=linux/arm64
          cache-to: type=gha,mode=max
          provenance: false
